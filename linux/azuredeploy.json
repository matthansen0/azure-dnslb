{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
      "adminUsername": {
        "type": "string",
        "metadata": {
          "description": "Admin username"
        }
      },
      "adminPassword": {
        "type": "securestring",
        "metadata": {
          "description": "Admin password"
        }
      },
      "vmNamePrefix": {
        "type": "string",
        "defaultValue": "BackendVM",
        "metadata": {
          "description": "Prefix to use for VM names"
        }
      },
      "vnetAddressPrefix": {
        "type": "string",
        "defaultValue": "10.0.0.0/16",
        "metadata": {
          "description": "Address space for vNet"
        }
      },
      "subnetAddressPrefix": {
        "type": "string",
        "defaultValue": "10.0.2.0/24",
        "metadata": {
          "description": "backendSubnet address space"
        }
      },
      "lbIP": {
        "type": "string",
        "defaultValue": "10.0.2.10",
        "metadata": {
          "description": "Private IP address for load balancer"
        }
      },
      "location": {
        "type": "string",
        "defaultValue": "[resourceGroup().location]",
        "metadata": {
          "description": "Location for all resources. Default is the location of the resource group."
        }
      },
      "vmSize": {
        "type": "string",
        "defaultValue": "Standard_DS1_V2",
        "metadata": {
          "description": "VM SKU Size"
        }
      },
      "vmImageSKU": {
        "type": "string",
        "defaultValue": "18.04-LTS",
        "allowedValues": [
        "16.04.0-LTS",
        "18.04-LTS",
        "20,04-LTS"
      ],
        "metadata": {
          "description": "VM Image SKU"
        }
      }
    },
    "variables": {
      "availabilitySetName": "AvSet",
      "storageAccountType": "Standard_LRS",
      "storageAccountName": "[uniqueString(resourceGroup().id)]",
      "virtualNetworkName": "vNet",
      "subnetName": "backendSubnet",
      "loadBalancerName": "ilb",
      "networkInterfaceName": "nic",
      "subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnetName'))]",
      "numberOfInstances": 2,
      "lbID": "[resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName'))]"
  
    },
    "resources": [
      {
        "apiVersion": "2018-02-01",
        "type": "Microsoft.Storage/storageAccounts",
        "name": "[variables('storageAccountName')]",
        "location": "[parameters('location')]",
        "kind": "Storage",
        "sku": {
          "name": "[variables('storageAccountType')]"
        }
      },
      {
        "apiVersion": "2018-04-01",
        "type": "Microsoft.Compute/availabilitySets",
        "location": "[parameters('location')]",
        "name": "[variables('availabilitySetName')]",
        "properties": {
          "PlatformUpdateDomainCount": 2,
          "PlatformFaultDomainCount": 2
        },
        "sku": {
          "name": "Aligned"
        }
      },
      {
        "apiVersion": "2018-04-01",
        "type": "Microsoft.Network/virtualNetworks",
        "name": "[variables('virtualNetworkName')]",
        "location": "[parameters('location')]",
        "properties": {
          "addressSpace": {
            "addressPrefixes": [
              "[parameters('vnetAddressPrefix')]"
            ]
          },
          "subnets": [
            {
              "name": "[variables('subnetName')]",
              "properties": {
                "addressPrefix": "[parameters('subnetAddressPrefix')]"
              }
            }
          ]
        }
      },
      {
        "apiVersion": "2018-04-01",
        "type": "Microsoft.Network/networkInterfaces",
        "name": "[concat(variables('networkInterfaceName'), copyindex())]",
        "location": "[parameters('location')]",
        "copy": {
          "name": "nicLoop",
          "count": "[variables('numberOfInstances')]"
        },
        "dependsOn": [
          "[variables('virtualNetworkName')]",
          "[variables('loadBalancerName')]"
        ],
        "properties": {
          "ipConfigurations": [
            {
              "name": "ipconfig1",
              "properties": {
                "privateIPAllocationMethod": "Dynamic",
                "subnet": {
                  "id": "[variables('subnetRef')]"
                },
                "loadBalancerBackendAddressPools": [
                  {
                    "id": "[concat(variables('lbID'), '/backendAddressPools/BackendPool1')]"
                  }
                ]
              }
            }
          ]
        }
      },
      {
        "apiVersion": "2018-04-01",
        "type": "Microsoft.Network/loadBalancers",
        "name": "[variables('loadBalancerName')]",
        "location": "[parameters('location')]",
        "dependsOn": [
          "[variables('virtualNetworkName')]"
        ],
         "sku":
          {
              "name": "basic"
          },
        "properties": {
          "frontendIPConfigurations": [
            {
              "properties": {
                "subnet": {
                  "id": "[variables('subnetRef')]"
                },
                "privateIPAddress": "[parameters('lbIP')]",
                "privateIPAllocationMethod": "Static"
              },
              "name": "LoadBalancerFrontend"
            }
          ],
          "backendAddressPools": [
            {
              "name": "BackendPool1"
            }
          ],
          "loadBalancingRules": [
            {
              "properties": {
                "frontendIPConfiguration": {
                  "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')), '/frontendIpConfigurations/LoadBalancerFrontend')]"
                },
                "backendAddressPool": {
                  "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')), '/backendAddressPools/BackendPool1')]"
                },
                "probe": {
                  "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')), '/probes/lbprobe')]"
                },
                "protocol": "Udp",
                "frontendPort": 53,
                "backendPort": 53,
                "idleTimeoutInMinutes": 15
              },
              "Name": "lbrule"
            }
          ],
          "probes": [
            {
              "properties": {
                "protocol": "Tcp",
                "port": 53,
                "intervalInSeconds": 15,
                "numberOfProbes": 2
              },
              "name": "lbprobe"
            }
          ]
        }
      },
      {
        "apiVersion": "2018-04-01",
        "type": "Microsoft.Compute/virtualMachines",
        "name": "[concat(parameters('vmNamePrefix'), copyindex())]",
        "copy": {
          "name": "virtualMachineLoop",
          "count": "[variables('numberOfInstances')]"
        },
        "location": "[parameters('location')]",
        "dependsOn": [
          "[variables('storageAccountName')]",
          "nicLoop",
          "[variables('availabilitySetName')]"
        ],
        "properties": {
          "availabilitySet": {
            "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('availabilitySetName'))]"
          },
          "hardwareProfile": {
            "vmSize": "[parameters('vmSize')]"
          },
          "osProfile": {
            "computerName": "[concat(parameters('vmNamePrefix'), copyIndex())]",
            "adminUsername": "[parameters('adminUsername')]",
            "adminPassword": "[parameters('adminPassword')]",
            "linuxConfiguration": "password"
          },
          "storageProfile": {
            "imageReference": {
              "publisher": "Canonical",
              "offer": "UbuntuServer",
              "sku": "[parameters('vmImageSKU')]",
              "version": "latest"
            },
            "osDisk": {
              "createOption": "FromImage"
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('networkInterfaceName'), copyindex()))]"
              }
            ]
          },
          "diagnosticsProfile": {
            "bootDiagnostics": {
              "enabled": true,
              "storageUri": "[reference(variables('storageAccountName')).primaryEndpoints.blob]"
            }
          }
        }, 
        "resources": [
  {
            "type": "extensions",
            "name": "CustomScriptExtension",
            "apiVersion": "2017-03-30",
            "location": "[parameters('location')]",
            "dependsOn": [
              "[concat(parameters('vmNamePrefix'), copyIndex())]"
            ],
     "properties": {
                "publisher": "Microsoft.Azure.Extensions",
                "type": "CustomScript",
                "typeHandlerVersion": "2.1",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "fileUris": [
                        "https://raw.githubusercontent.com/matthansen0/azure-dnslb/dev/scripts/configureDNS.sh"
                    ]
                },
                "protectedSettings": {
                    "commandToExecute": "sh configureDNS.sh"
                }
    }
  }
        ]
      }
    ]
  }